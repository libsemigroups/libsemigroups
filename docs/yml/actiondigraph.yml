libsemigroups::ActionDigraph:
- Member types:
  - ["This page contains information about the member types of the
     :cpp:any:`ActionDigraph` class."]
  - adjacency_matrix_type
  - node_type
  - size_type
  - label_type
  - scc_index_type
  - const_iterator_nodes
  - const_reverse_iterator_nodes
  - const_iterator_edges
  - const_iterator_scc
  - const_iterator_sccs
  - const_iterator_scc_roots
  - algorithm
  - const_pilo_iterator
  - const_pislo_iterator
  - const_pstislo_iterator
- Constructors:
  - ["This page contains information about the constructors for the
     :cpp:any:`ActionDigraph` class."]
  - ActionDigraph(T, T)
  - ActionDigraph(ActionDigraph const&)
  - ActionDigraph(ActionDigraph&&)
  - operator=(ActionDigraph const&)
  - operator=(ActionDigraph&&)
- Static member functions:
  - ["This page contains information about the static member functions for the
     :cpp:any:`ActionDigraph` class."]
  - random(T, T, std::mt19937)
  - random(T, T, T, std::mt19937)
  - random_acyclic(T, T, T, std::mt19937)
- Initialization:
  - ["This page contains information about initialising the
     :cpp:any:`ActionDigraph` class."]
  - add_nodes(size_t)
  - add_to_out_degree(size_t)
  - add_edge(node_type, node_type, label_type)
  - add_edge_nc(node_type, node_type, label_type)
  - remove_edge_nc(node_type, label_type)
  - swap_edges_nc(node_type, node_type, label_type)
  - reserve(T, T) const
  - restrict(size_t)
- Operators:
  - ["This page contains information about operators related to the
    :cpp:any:`ActionDigraph` class."]
  - operator==(ActionDigraph const &) const
- Nodes, edges, neighbors:
  - ["This page contains information about accessing the nodes, edges, and
      neighbours of the :cpp:any:`ActionDigraph` class."]
  - neighbor(node_type, label_type) const
  - unsafe_neighbor(node_type, label_type) const
  - next_neighbor(node_type, label_type) const
  - unsafe_next_neighbor(node_type, label_type) const
  - number_of_nodes() const noexcept
  - number_of_edges() const
  - number_of_edges(node_type) const
  - out_degree() const noexcept
  - validate() const noexcept
  - cbegin_nodes() const noexcept
  - cend_nodes() const noexcept
  - crbegin_nodes() const noexcept
  - crend_nodes() const noexcept
  - cbegin_edges(node_type) const
  - cend_edges(node_type) const
  - cbegin_edges_nc(node_type) const noexcept
  - cend_edges_nc(node_type) const noexcept
  - table() const noexcept
- Strongly connected components:
  - ["This page contains information about the strongly connected components
      functionality of the :cpp:any:`ActionDigraph` class."]
  - scc_id(node_type) const
  - number_of_scc() const
  - root_of_scc(node_type) const
  - cbegin_sccs() const
  - cend_sccs() const
  - cbegin_scc(scc_index_type) const
  - cend_scc(scc_index_type) const
  - cbegin_scc_roots() const
  - cend_scc_roots() const
- Subdigraphs:
  - ["This page contains information about the functionality of the
      :cpp:any:`ActionDigraph` class for finding spanning forests and other
      subdigraphs."]
  - spanning_forest() const
  - reverse_spanning_forest() const
  - induced_subdigraph(node_type,node_type)
- Path iterators:
  - ["This page contains information about the functionality of the
      :cpp:any:`ActionDigraph` class for iterating through paths."]
  - cbegin_panilo(node_type, size_t, size_t) const
  - cend_panilo() const
  - cbegin_panislo(node_type, size_t, size_t) const
  - cend_panislo() const
  - cbegin_pilo(node_type, size_t, size_t) const
  - cend_pilo() const
  - cbegin_pislo(node_type, size_t, size_t) const
  - cend_pislo() const
  - cbegin_pstilo(node_type, node_type, size_t, size_t) const
  - cend_pstilo() const
  - cbegin_pstislo(node_type, node_type, size_t, size_t) const
  - cend_pstislo() const
- Counting paths:
  - ["This page contains information about the functionality of the
     :cpp:any:`ActionDigraph` class for counting paths."]
  - number_of_paths_algorithm(node_type) const noexcept
  - number_of_paths(node_type) const
  - number_of_paths_algorithm(node_type, size_t, size_t) const
  - number_of_paths(node_type, size_t, size_t, algorithm) const
  - number_of_paths_algorithm(node_type, node_type, size_t, size_t) const
  - number_of_paths(node_type, node_type, size_t, size_t, algorithm) const
