name: OS
on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  alpine:
    name: Alpine
    defaults:
      run:
        shell: alpine.sh {0}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
      - name: Alpine/musl versions . . .
        run: |
          cat /etc/alpine-release
          apk info musl
      - name: Install autotools etc . . .
        run: |
          apk add build-base autoconf automake libtool
        shell: alpine.sh --root {0}
      - name: Setup ccache . . .
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          install_ccache: true
      - name: Configure . . .
        run: ./autogen.sh && ./configure
      - name: Build libsemigroups . . .
        run: make -j4
      - name: Build test_all . . .
        run: make check -j4
      - name: Run the quick tests . . .
        run: ./test_all "[quick]"
  cygwin:
    name: Cygwin
    defaults:
      run:
        shell: C:\cygwin64\bin\bash.exe --login -o igncr '{0}'
    timeout-minutes: 60
    runs-on: windows-latest
    env:
      CHERE_INVOKING: 1
    steps:
      - uses: gap-actions/setup-cygwin@v1
      - uses: actions/checkout@v4
      - name: Configure . . .
        run: ./autogen.sh && ./configure --disable-eigen --disable-hpcombi CXXFLAGS="-Os"
      - name: Build libsemigroups . . .
        run: make -j4
      - name: Run make check . . .
        run: make check -j4
  macos:
    name: macOS
    timeout-minutes: 60
    runs-on: macOS-latest
    env:
      CXX: ccache clang++
      CXXFLAGS: -fdiagnostics-color
    steps:
      - uses: actions/checkout@v4
      - name: Setup ccache . . .
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          install_ccache: true
      - name: Install dependencies . . .
        run: brew install autoconf automake libtool
      - name: Clang version . . .
        run: clang++ --version
      - name: Configure . . .
        run: |
          mkdir -p m4
          ./autogen.sh
          ./configure CXX="$CXX" CXXFLAGS="$CXXFLAGS" --disable-backward
      - name: Build libsemigroups . . .
        run: make -j4
      - name: Build test_all . . .
        run: make test_all -j4
      - name: Run the quick tests . . .
        run: ./test_all "[quick]"
  ubuntu-32:
    name: Ubuntu-32
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      GH_ACTIONS_ABI: 32
      GH_ACTIONS_ARCH: x86
      GH_ACTIONS_TEST_PROG: test_all
      GH_ACTIONS_TEST_TAGS: "[quick][exclude:no-valgrind][exclude:no-coverage][exclude:BMat8]"
    steps:
      - uses: actions/checkout@v4
      - name: Running the quick tests in libsemigroups-docker-x86-32-base docker container . . .
        run: |
          ci/launch-docker-container.sh
  arm:
    name: Ubuntu-arm
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - name: Setup ccache . . .
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          install_ccache: true
      - name: Install autotools etc . . .
        run: sudo apt-get install autoconf automake libtool
      - name: Configure . . .
        run: ./autogen.sh && ./configure
      - name: Build libsemigroups . . .
        run: make -j4
      - name: Build test_all . . .
        run: make check -j4
      - name: Run the quick tests . . .
        run: ./test_all "[quick]"
